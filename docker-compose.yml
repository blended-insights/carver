services:
  neo4j:
    image: neo4j:5
    container_name: carver_neo4j
    ports:
      - 7474:7474   # HTTP Browser UI
      - 7687:7687   # Bolt protocol for DB connection
    networks:
      - carver-network
    environment:
      NEO4J_AUTH: neo4j/password123
      NEO4J_PLUGINS: '["apoc"]'
    volumes:
      - neo4j_data:/data
    restart: unless-stopped

  redis:
    image: redis:7
    container_name: carver_redis
    ports:
      - 6379:6379
    networks:
      - carver-network
    volumes:
      - redis_data:/data
    restart: unless-stopped

  api:
    build:
      context: .
      dockerfile: ./apps/api/Dockerfile.prod
    container_name: carver_api
    restart: always
    ports:
      - 9001:3000
    networks:
      - carver-network
    volumes:
      - api_data:/app
      - user_mount:/app/user_mount 
    depends_on:
      - redis
      - neo4j
    environment:
      HOST: 0.0.0.0
      NODE_ENV: production
      NEO4J_URI: bolt://neo4j:7687
      NEO4J_USERNAME: neo4j
      NEO4J_PASSWORD: password123
      PORT: 3000
      REDIS_URL: redis://redis:6379
      USER_MOUNT: /app/user_mount

  web:
    build:
      context: .
      dockerfile: ./apps/web/Dockerfile.prod
      args:
        ALLOWED_ORIGINS: http://localhost:9002
        NEXT_PUBLIC_REDIS_URL: redis://redis:6379
        NEXT_PUBLIC_WATCHER_API_URL: http://localhost:9001  # used in browser
        INTERNAL_WATCHER_API_URL: http://api:3000           # used in server-side code
        NODE_ENV: production
    container_name: carver_web
    restart: always
    ports:
      - 9002:3000
    networks:
      - carver-network
    volumes:
      - web_data:/app
    depends_on:
      - api

networks:
  carver-network:
    driver: bridge
    
volumes:
  api_data:
  web_data:
  neo4j_data:
  redis_data:
  user_mount:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /Users/jamiethompson/dev